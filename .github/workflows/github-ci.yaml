###################################################################################################
############################# ShamanOps pipeline | GitHub Actions #################################
###################################################################################################
name: ShamanOps
on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
jobs:
  shamanops:
    uses: shamanops/resources/.github/workflows/base-rc.yaml@main
    with:
    # Environments:
    # full-with-drp (dev/stg/prod/drp) | full (dev/stg/prod) | mid (stg/prod) | minimal (prod)
      environments: 'available'
    # Project
      projectName: 'examples'
#-------------------------------------------------------------------------------------------------#
## Features  -------------------------------------------------------------------------------------#
    # Multicluster
      multiclusterTag: "main, gke"
    # Approvals
      shamanopsBusinessApprovers: 'jroca@shamanops.com'
      shamanopsTechnicalApprovers: 'flifschitz@shamanops.com'
      shamanopsBusinessApproversMinimalProd: '0'
      shamanopsTechnicalApproversMinimalProd: '1'
    # Stress Check
      stress_check_enabled: 'true'
      stress_check_blocker: 'false'
    # Stress Check | Customization
      # Specify the maximum percentage of errors that are allowed before the task is stopped
      stress_check_error_rate_max: '15'
      # Specify the number of threads (that simulates a number of users)
      stress_check_thread: '19'
      # Specify the amount of time that it takes to start all of the threads
      stress_check_upPeriod: '10'
      # Specify how long the task should last
      stress_check_second: '60'
    # Pre-deploy Jobs
      pre_jobs_enabled: 'true'
      pre_jobs_blocker: 'false'  
    # Deployment Strategy
      # By default the deploys will use the rolling strategy
      # To use Canary strategy in your enviroments set this to 'true'
      strategyCanaryDev: 'true'
      strategyCanaryStg: 'true'
      strategyCanaryProd: 'true'  
#-------------------------------------------------------------------------------------------------#
    secrets:
      shamanops_argocd_dev_plus_token: ${{ secrets.shamanops_argocd_dev_plus_token }}
      shamanops_argocd_stg_plus_token: ${{ secrets.shamanops_argocd_stg_plus_token }}
      shamanops_argocd_prod_plus_token: ${{ secrets.shamanops_argocd_prod_plus_token }} 
      shamanops_customer_token: ${{ secrets.shamanops_customer_token }}
      shamanops_argocd_dev_token: ${{ secrets.shamanops_argocd_dev_token }}
      shamanops_argocd_stg_token: ${{ secrets.shamanops_argocd_stg_token }}
      shamanops_argocd_prod_token: ${{ secrets.shamanops_argocd_prod_token }}
      shamanops_argocd_drp_token: ${{ secrets.shamanops_argocd_drp_token }}
      shamanops_manifest_repository_token: ${{ secrets.shamanops_manifest_repository_token }}
      shamanops_chat_webhook: ${{ secrets.shamanops_chat_webhook }}
      shamanops_registry_password: ${{ secrets.shamanops_registry_password }}
      shamanops_dockerfile_token: ${{ secrets.shamanops_dockerfile_token }}
##################################################################################################
##################################################################################################
